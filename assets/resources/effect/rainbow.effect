// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <texture>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  float drawHalfCircle(vec2 center,vec2 uv,float radius) {
    float dis = distance(uv, center);
    // dis = step(dis,radius);
    dis = smoothstep(radius, radius - 0.0000001, dis);
    return dis;
  }

  // 参数： center 圆心
  // uv 像素点坐标
  // radius 圆半径
  // width 线宽
  float drawHalfCircleLine(vec2 center,vec2 uv,float radius,float width) {
    float c1 = drawHalfCircle(center,uv,radius);
    float c2 = drawHalfCircle(center,uv,radius - width);
    return c1 - c2;
  }

  void main () {
    vec3 color = vec3(0,1,0);
    vec2 point = vec2(0.5,0.5);

    float circleline1 = drawHalfCircleLine(point, v_uv0, 0.45, 0.05);
    float circleline2 = drawHalfCircleLine(point, v_uv0, 0.4, 0.05);
    float circleline3 = drawHalfCircleLine(point, v_uv0, 0.35, 0.05);
    vec3 colorred = vec3(1, 0, 0);
    vec3 colorgreen = vec3(0, 1, 0);
    vec3 colorblue = vec3(0, 0, 1);
    vec3 ret = circleline1 * colorred + circleline2 * colorgreen + circleline3 * colorblue;
    color = ret;

    vec4 o = vec4(color, 1);
    gl_FragColor = o;
  }
}%
